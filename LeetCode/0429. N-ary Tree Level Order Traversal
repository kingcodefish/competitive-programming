/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(root == nullptr)
            return {};
        queue<Node*> nodes;
        vector<vector<int>> traversal;
        nodes.push(root);

        while(!nodes.empty())
        {
            vector<int> curr;
            int n = nodes.size();
            while(n--)
            {
                curr.push_back(nodes.front()->val);
                for(auto i : nodes.front()->children)
                    nodes.push(i);
                nodes.pop();
            }
            traversal.push_back(curr);
        }
        return traversal;
    }
};
