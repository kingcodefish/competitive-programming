/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* resultL1 = l1; // Address
        ListNode* resultL2 = l2; // Address
        char selector = 1; // 8 bits
        char sum = 0; // 8 bits
        char carry = 0; // 8 bits

        sum = l1->val + l2->val + carry;
        carry = sum / 10;
        sum %= 10;
        l1->val = sum;
        l2->val = sum;
        while(l1->next != nullptr && l2->next != nullptr)
        {
            l1 = l1->next;
            l2 = l2->next;
            sum = l1->val + l2->val + carry;
            carry = sum / 10;
            sum %= 10;
            l1->val = sum;
            l2->val = sum;
        }

        while(carry > 0 && l1->next != nullptr)
        {
            l1 = l1->next;
            sum = l1->val + carry;
            carry = sum / 10;
            l1->val = sum % 10;
            selector = 1;
        }
        if(carry > 0 && selector == 1)
        {
            l1->next = new ListNode(carry);
        }
        while(carry > 0 && l2->next != nullptr)
        {
            l2 = l2->next;
            sum = l2->val + carry;
            carry = sum / 10;
            l2->val = sum % 10;
            selector = 2;
        }
        if(carry > 0 && selector == 2)
        {
            l2->next = new ListNode(carry);
        }

        if(l1->next == nullptr && l2->next != nullptr)
            selector = 2;

        if(selector == 1)
            return resultL1;
        else
            return resultL2;
    }
};
