class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        // Brute-force:
        // Merge two sorted arrays, find median.
        int n1 = 0, n2 = 0;
        std::vector<int> nums3;
        nums3.reserve(nums1.size() + nums2.size());

        while(n1 < nums1.size() && n2 < nums2.size())
        {
            if(nums1[n1] <= nums2[n2])
                nums3.push_back(nums1[n1++]);
            else
                nums3.push_back(nums2[n2++]);
        }
        for(; n1 < nums1.size(); ++n1)
            nums3.push_back(nums1[n1]);
        for(; n2 < nums2.size(); ++n2)
            nums3.push_back(nums2[n2]);

        if(nums3.size() % 2 == 0)
            return (nums3[nums3.size() / 2 - 1] + nums3[nums3.size() / 2]) / 2.0;
        else
            return nums3[nums3.size() / 2];
    }
};
